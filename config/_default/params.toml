#######
## Site-level parameters
#######

product_name = "Chef Habitat"

#######
# menuOrder = The order of the menus are included in the left nav menu.
#             Menus are defined in the /config/_default/menu.toml file
#######
menuOrder = ["about", "install", "saas", "origins", "packages", "plans", "services", "sup", "studio", "reference", "containers", "release_notes"]

#######
# robots = The default robots config applied to each page in the robots meta tag.
#          See http://www.robotstxt.org/meta.html
#######
robots = ''

#######
# breadcrumbs = Whether breadcrumbs are enabled.
#               See https://gohugo.io/content-management/sections/#ancestors-and-descendants
#
# breadcrumb_base = adds an additional link back to docs.chef.io (or some other link)
#######
breadcrumbs = true

[[breadcrumb_base]]
breadcrumb = "Documentation"
url = "https://docs.chef.io"


########
# version_selector = Whether to enable a version selector allowing users to switch between doc versions.
#                    See "versions" below to define versions used in dropdown menu.
#                    `release_data.version` must be defined if version_selector is true.
#######
#version_selector = true

#######
# gh_path = The URL path to the content directory
#           This creates the "Edit this page on GitHub" button at the bottom of each page with the correct URL.
#           Each page must also have gh_repo = "<REPO>" in the page frontmatter.
#           Don't use this with private repos.
#######
[chef-habitat]
  gh_path = ""

### Version dropdown ##########
#
# This section populates the version number dropdown menu.
#
# 1. Add a table for each version included in the dropdown menu.
# 2. Tables must be in reverse SemVer order.
#
# version = The version number for a release.
# base_url = The base URL for a release. For example, `https://docs.chef.io/habitat/<MAJ>.<MIN>`
###############################

[[versions]]
version = "1.6"
base_url = "https://docs.chef.io/habitat/1.6"



#################
#
# Data for this version.
# version = The version this branch documents. `<MAJ>.<MIN>`
#           version is required if version_selector = true
# release_date = The release date in ISO 8601 format: `YYYY-MM-DD`.
# github_branch = The repo branch for this version. For example, `release-<MAJ>.<MIN>`.
# deprecated = Whether this version is deprecated. `true` or `false`.
# eol = Whether this version is EOL. `true` or `false`.
#################

[release_data]
version = "1.6"
